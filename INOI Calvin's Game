#include <iostream>
#include <algorithm>
 
using namespace std;
 
int main()
{
    int n, k;
 
    cin >> n >> k;
    int* dp1 = new int[n]();
    int* dp2 = new int[n]();
    int* ar = new int[n]();
 
    for (int i = 0; i < n; i++)
        cin >> ar[i];
 
    k--;
 
    dp1[k + 1] = ar[k + 1];//dp1[2] = ar[2] = -2
    dp1[k + 2] = max(dp1[k + 1] + ar[k + 2], ar[k + 2]);//dp1[3] = max(-2+1,1) = 1;
 
    for (int j = k + 3; j < n; j++)
        dp1[j] = max(ar[j] + dp1[j - 1], ar[j] + dp1[j - 2]);//dp1[4] = max(1+1,1-2)=2;
 
    dp2[1] = ar[0];//dp2[1] = 5;
    dp2[2] = max(dp2[1] + ar[1], ar[0]);//dp2[2] = max(8,5);
 
    for(int j = 3;j<n;j++)
        dp2[j] = max(ar[j-1] + dp2[j - 1], ar[j-2] + dp2[j - 2]);//dp2[3] = max(-2+8,3+5)=8;dp2[4] = max(1+8,-2+8)=9;
 
    int mcount = dp1[k] + dp2[k];
 
    for (int j = k; j < n; j++)
    mcount = max(dp1[j] + dp2[j], mcount);
 
    cout << mcount;
}
