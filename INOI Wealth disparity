#include <iostream>
#include <algorithm>
#include <vector>
#include <queue>
using namespace std;

int main() {
	int n;
	cin>>n;
	int a[n+10];
	vector<int> v1[n+10];
	int p[n+10];
	int pos[n+10];
	int root;
	queue<int> q1;
	for(int i =1;i<=n;i++){
	    cin>>a[i];
	}
	for(int i =1;i<=n;i++){
	    cin>>p[i];
	    if(p[i] == -1){
	        root = i;
	        
	        continue;
	    }else{
	        
	        v1[p[i]].push_back(i);
	        
	    }
	}
	q1.push(root);
	int ans = 0;
	bool visited[n+10] = {false};
	visited[root] = true;
	int maxinroot[n+10]={0};
	maxinroot[root] = a[root];
	while(!q1.empty()){
	    int store = q1.front();
	    q1.pop();
	    for(int i =0 ; i<v1[store].size();i++){
	        if(!visited[v1[store][i]]){
	            q1.push(v1[store][i]);
	            ans = max(ans,maxinroot[store] - a[v1[store][i]]);
	            maxinroot[v1[store][i]] = max(maxinroot[store],a[v1[store][i]]);
	        }
	    }
	}
	std::cout<<ans;
}
